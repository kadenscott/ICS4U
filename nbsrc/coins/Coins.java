/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sh.kaden.ics4u.coins;

import java.awt.Color;
import java.text.NumberFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

/**
 *
 * @author kaden
 */
public class Coins extends javax.swing.JFrame {
    
    private static final NumberFormat MONEY_FORMAT = NumberFormat.getCurrencyInstance(Locale.GERMANY);

    /**
     * Creates new form Coins
     */
    public Coins() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        amountLabel = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        costField = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        coinsTextArea = new javax.swing.JTextArea();
        changeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        amountLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        amountLabel.setText("Amount paid: €");
        getContentPane().add(amountLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 100, 20));

        costLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        costLabel.setText("Cost of items: €");
        getContentPane().add(costLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 20));
        getContentPane().add(amountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 130, 20));

        costField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costFieldActionPerformed(evt);
            }
        });
        getContentPane().add(costField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 130, 20));

        calculateButton.setText("Calculate change due");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(calculateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 240, 30));

        coinsTextArea.setColumns(20);
        coinsTextArea.setRows(5);
        jScrollPane1.setViewportView(coinsTextArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 120, 240, 100));

        changeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(changeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 220, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void costFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costFieldActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        final String costText = this.costField.getText();
        final String amountText = this.amountField.getText();
        
        try {
            final double cost = Double.parseDouble(costText);
            final double amount = Double.parseDouble(amountText);
            
            if (cost > amount) {
                this.changeLabel.setText("Bro u got robbed");
                this.coinsTextArea.setText("");
                return;
            }
            
            final double change = amount - cost;

            this.changeLabel.setText("Change: "+MONEY_FORMAT.format(change));
            this.changeLabel.setForeground(Color.BLACK);
            final Map<String, Integer> coins =  this.calculateChange(change * 100);
            this.coinsTextArea.setText("");
            String coinText = "";
            for (final Map.Entry<String, Integer> entry : coins.entrySet()) {
                coinText += entry.getValue() + "x "+entry.getKey() + " coin\n";
            }
            this.coinsTextArea.setText(coinText);
            
        } catch (final Exception e) {
            this.changeLabel.setText("Cost and amount must be numbers.");
            this.changeLabel.setForeground(Color.RED);
        }
    }//GEN-LAST:event_calculateButtonActionPerformed

    /**
     * Calculates the number of coins required for the provided change value.
     * The map will contain a key for each coin type, with a value for how
     * many coins should be given.
     */
    private Map<String, Integer> calculateChange(double change) {
        final Map<String, Integer> changeMap = new HashMap<>();
        
        while (change > 0) {
            System.out.println("change is "+change);
            if (change >= 200) {change -= 200; this.addCoin("2€", changeMap); continue;}
            if (change >= 100) {change -= 100; this.addCoin("1€", changeMap); continue;}
            if (change >= 50) {change -= 50; this.addCoin("50p", changeMap); continue;}
            if (change >= 20) {change -= 20; this.addCoin("20p", changeMap); continue;}
            if (change >= 10) {change -= 10; this.addCoin("10p", changeMap); continue;}
            if (change >= 5) {change -= 5; this.addCoin("5p", changeMap); continue;}
            if (change >= 1) {change -= 1; this.addCoin("1p", changeMap); continue;}
        }
        
        return changeMap;
    }
    
    private void addCoin(final String coin,
                         final Map<String, Integer> coinMap) {
        System.out.println("adding a "+coin+" to map");
        coinMap.put(coin, coinMap.getOrDefault(coin, 0) + 1);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Coins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Coins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Coins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Coins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Coins().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel changeLabel;
    private javax.swing.JTextArea coinsTextArea;
    private javax.swing.JTextField costField;
    private javax.swing.JLabel costLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
